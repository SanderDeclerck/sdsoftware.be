name: 'Deploy'

on:
  push:
    branches:
      - main

env:
  APP_NAME: 

jobs:

  deploy_infrastructure:
    name: '🏢 Deploy infrastructure'
    runs-on: 'ubuntu-latest'
    environment: 'Production'

    permissions:
      id-token: write
    
    steps:
    - name: '⚙️ Prepare: Checkout code'
      uses: 'actions/checkout@v1'

    - name: '⚙️ Prepare: Login to Azure'
      uses: 'azure/login@v1'
      with:
        client-id: ${{ secrets.ACTIVE_DIRECTORY_APPLICATION_ID }}
        tenant-id: ${{ secrets.ACTIVE_DIRECTORY_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 
        enable-AzPSSession: true

    - name: '🏢 Infrastructure: Create resource group'
      uses: 'azure/CLI@v1'
      with:
        inlinescript: az group create -g ${{ secrets.RESOURCE_GROUP_NAME }} -l ${{ secrets.RESOURCE_GROUP_LOCATION }}

    - name: '🏢 Infrastructure: Deploy bicep template'
      uses: 'azure/CLI@v1'
      with:
        inlinescript: |
          az deployment group create -g ${{ secrets.RESOURCE_GROUP_NAME }} \
                                     --template-file ./infrastructure/main.bicep \
                                     --parameters customDomains='[ { "hostname": "www.sdsoftware.be", "dnsZone": "sdsoftware.be", "resourceGroup": "shared", "dnsRecordName": "www" } ]' \
                                     --parameters staticWebAppName=$APP_NAME
    
  deploy_app:
    name: '🚀 Deploy application'
    runs-on: 'ubuntu-latest'
    needs: 'deploy_infrastructure'
    environment: 'Production'
    
    steps:
    - name: '⚙️ Prepare: Checkout code'
      uses: 'actions/checkout@v1'

    - name: '⚙️ Prepare: Get deployment credential'
      uses: 'azure/CLI@v1'
      with:
        inlinescript: az staticwebapp secrets list --name $APP_NAME --query properties.apiKey

    - name: '🪣 Clean-up: Reset deployment credentials'
      uses: 'azure/CLI@v1'
      with:
        inlinescript: az staticwebapp secrets reset-api-key --name $APP_NAME
    
